/*1. find empty cell 
  2. assign a number and check if it is safe
  3. then on that cell write that no and 
  4. ask recursion to solve rest
  5. if recusion could not solve it 
  6. try another no to present cell*/
#include<iostream>
using namespace std;
void print(int grid[][9])
{
    for(int i=0;i<9;i++)
    {
        for(int j=0;j<9;j++)
            cout<<grid[i][j]<<" ";
        cout<<"\n";
    }
}
bool findcell(int grid[][9],int &row,int &col)
{
    for(int i=0;i<9;i++)
    {
        for(int j=0;j<9;j++)
        {
            if(grid[i][j]==0)
            {
                row=i;
                col=j;
                return false;
            }
        }
    }
    return true;
}
bool rowcol(int grid[][9],int num,int r,int c)
{
    for(int i=0;i<9;i++)
    {
        if(grid[i][c]==num || grid[r][i]==num)
            return  true;
    }
    return false;
}
bool box(int grid[][9],int num,int r,int c)
{
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            if(grid[r+i][j+c]==num)
                return true;
        }
    }
    return false;
}
bool safe(int grid[][9],int num,int r,int c)
{
    return (!rowcol(grid,num,r,c) && !box(grid,num,r-r%3,c-c%3) && grid[r][c]==0); 
}
bool sudoku(int grid[][9])
{
    int row,col;
    if(findcell(grid,row,col))
        return true;
    for(int i=1;i<=9;i++)
    {
        if(safe(grid,i,row,col))
        {
            grid[row][col]=i;
            if(sudoku(grid))
                return true;
            grid[row][col]=0;
        }
    }
    return false;
}
int main()
{
    int grid[9][9] = { { 3, 0, 6, 5, 0, 8, 4, 0, 0 }, 
                       { 5, 2, 0, 0, 0, 0, 0, 0, 0 }, 
                       { 0, 8, 7, 0, 0, 0, 0, 3, 1 }, 
                       { 0, 0, 3, 0, 1, 0, 0, 8, 0 }, 
                       { 9, 0, 0, 8, 6, 3, 0, 0, 5 }, 
                       { 0, 5, 0, 0, 9, 0, 6, 0, 0 }, 
                       { 1, 3, 0, 0, 0, 0, 2, 5, 0 }, 
                       { 0, 0, 0, 0, 0, 0, 0, 7, 4 }, 
                       { 0, 0, 5, 2, 0, 6, 3, 0, 0 } }; 
    if(sudoku(grid))
        print(grid);
    else
        cout<<"NO SOLUTION!\n";
    return 0;
}